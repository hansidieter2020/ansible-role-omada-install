- name: Install essential packages
  ansible.builtin.include_tasks: "{{ ansible_os_family | lower }}.yml"
  when: ansible_os_family == 'Debian'

- name: Check Required Variables
  ansible.builtin.assert:
    that: "{{ req_var }} is defined and {{ req_var }} | length > 0 and {{ req_var }} != None"
    fail_msg: "{{ req_var }} needs to be set for the role to work"
    success_msg: "{{ req_var }} is defined"
    quiet: true
  loop:
    - omada_tar_src
  loop_control:
    loop_var: req_var

- name: Install Omada Dependencies
  ansible.builtin.package:
    name: "{{ omada_dep_pkg }}"
    state: present
  loop: "{{ omada_dependencies }}"
  loop_control:
    loop_var: omada_dep_pkg
  register: package_status
  until: package_status is success
  delay: 10
  retries: 6
- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto
  tags: jsvc

- name: Check for jsvc binary
  ansible.builtin.stat:
    path: /usr/bin/jsvc
  register: jsvc_binary
  tags: jsvc

- name: Error when jsvc is missing
  ansible.builtin.fail:
    msg: "Error: jsvc is not present, Omada SDN requires jsvc"
  when:
    - "'jsvc' not in ansible_facts.packages"
    - not jsvc_binary.stat.exists
  tags: jsvc

- name: Check for omada binary
  ansible.builtin.stat:
    path: /usr/bin/tpeap
  register: omada_binary

- name: Create a temporary directory for omada tar file
  ansible.builtin.file:
    path: "{{ omada_tar_dir }}/{{ omada_tar_folder }}"
    state: directory
    mode: "0775"
  when: not omada_binary.stat.exists
  register: omada_temp_dir

- name: Download and extract omada software
  ansible.builtin.unarchive:
    src: "{{ omada_tar_src }}"
    dest: "{{ omada_temp_dir.path }}"
    remote_src: "{{ omada_tar_src_remote }}"
    extra_opts:
      - --strip-components=1
  register: omada_tar
  when: not omada_binary.stat.exists

- name: Run omada install script
  become: true
  ansible.builtin.command: "./install.sh -y"
  args:
    chdir: "{{ omada_tar.dest }}"
    creates: /opt/tplink/EAPController/bin/control.sh
  register: omada_install
  when: omada_tar.changed # noqa: no-handler
  notify:
    - Remove tar folder
    - Enable omada service

- name: Configure omada to run as non-root user
  ansible.builtin.include_tasks: omada-non-root.yml
  when:
    - omada_install.changed # noqa: no-handler
    - omada_non_root
